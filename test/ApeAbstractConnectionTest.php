<?php
require_once 'PHPUnit/Framework.php';

require_once '../lib/ApeAbstractConnection.php';
require_once '../lib/ApeRequest.php';
require_once '_files/ApeAbstractConnectionStub.php';


/**
 * Test class for ApeAbstractConnection.
 * Generated by PHPUnit on 2010-03-08 at 16:59:25.
 */
class ApeAbstractConnectionTest extends PHPUnit_Framework_TestCase
{
  
    protected $testJSON = '[{"time":"1234567890","raw":"pushed","data":{"value":"ok"}}]';

    protected $connection;
    
	protected function getConnection($port){
		return new ApeAbstractConnectionStub(APE_PHP_CONNECTION_HOST, $port, APE_PHP_CONNECTION_PROTOCOL);	
	}    
    
	protected function setUp(){	
		$this->connection = $this->getConnection(APE_PHP_CONNECTION_PORT);
		$this->request = new ApeRequest('dosomething');
	}
  
	public function testApeAbstractConnectionStub(){	
		$this->assertTrue(ApeAbstractConnectionStub::available());
	}
    
    
    
    public function testConstruction(){
         $this->assertTrue($this->connection instanceof ApeAbstractConnection);	   	
    }  
    

    public function testGetBaseUrl(){
         $this->assertEquals(APE_PHP_CONNECTION_PROTOCOL.'://'.APE_PHP_CONNECTION_HOST, $this->connection->getBaseUrl());
    }

    public function testGetUrl(){ 
         $this->assertEquals(APE_PHP_CONNECTION_PROTOCOL.'://'.APE_PHP_CONNECTION_HOST.':'.APE_PHP_CONNECTION_PORT.'/?', $this->connection->getUrl());
    }

    public function testSendRequest(){
    	$this->request->setParam('foo', 'bar');
    	$res = $this->connection->sendRequest($this->request);
    	$response = new ApeResponse(ApeAbstractConnectionStub::$defaultResponse);
    	$this->assertEquals($response, $res);	
    }

    public function testSendRequestExceptionReturnsNull(){
		$request = new ApeRequest('foo');
		$request->setParam('exception', true);
		$this->assertEquals(NULL, $this->connection->sendRequest($request));   	
    }

    public function testSendRequestReturnsNull(){
		$request = new ApeRequest('foo');
		$request->setParam('null', true);
		$this->assertEquals(NULL, $this->connection->sendRequest($request));   	
    }
}
?>
